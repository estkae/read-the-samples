Arduino\n\nThe Arduino is a small microcontroller, the key component for any hardware project. It allows you to interact with the real world with the help of sensors.\n\nAs you might know, the Arduino doesn’t come alone, it needs a small piece of hardware called the USB/serial converter to be able to interact with your computer and communicate with the Arduino.\n\nBy default the Arduino only comes with an Atmega328. This is a pretty good chip, as it can run up to 20MHz, has lots of RAM (32kB), lots of IO pins (20) and lots of serial ports (4).\n\nWe can still upgrade the Arduino with a more powerful chip, like the Atmega2560 (60MHz, lots of RAM, lots of IO pins and serial ports), the Atmega1280 (80MHz, lots of RAM, lots of IO pins and serial ports) or the Atmega2561 (62.5MHz, lots of RAM, lots of IO pins and serial ports).\n\nAs you can see, the difference between these chips is the speed (Mhz) and the amount of RAM.\n\nThe choice between the other 3 chips depends on the project you’re going to use the Arduino for. If you need a high speed for something like an audio or video streaming application, you should go for the Atmega2560 or Atmega2561. If you need a lot of IO pins for some digital inputs and outputs, you should go for the Atmega1280.\n\nThe first Arduino board I have made has a Mega2560 on it, so that’s what we’re going to be using. The pins can be easily set in a manner that suits the hardware project, and there are lots of examples and examples on the internet for lots of projects.\n\nI2C, SPI\n\nIf you plan to use the Arduino to connect your hardware projects to a PC, you will need an extra cable. One that has the 2 signals to use with the Arduino (I2C or SPI) and another one to use with your PC (serial). This is what I will be using for this project, and I highly recommend it to anyone else who plans to do the same.\n\nHere is an example of such a cable.\n\nThat’s it for today, stay tuned for the next part in which I will be adding code to control the LEDs and adding more control buttons.